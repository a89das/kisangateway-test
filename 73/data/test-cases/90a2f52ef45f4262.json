{"uid":"90a2f52ef45f4262","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1701047091027,"stop":1701047101307,"duration":10280},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5639281da5e3 <unknown>\n#1 0x563927e9d0b7 <unknown>\n#2 0x563927eeaf53 <unknown>\n#3 0x563927eeb051 <unknown>\n#4 0x563927f309c4 <unknown>\n#5 0x563927f11f1d <unknown>\n#6 0x563927f2db3d <unknown>\n#7 0x563927f11cc3 <unknown>\n#8 0x563927edd0e4 <unknown>\n#9 0x563927ede0ae <unknown>\n#10 0x5639281a0ce1 <unknown>\n#11 0x5639281a4b7e <unknown>\n#12 0x56392818e4b5 <unknown>\n#13 0x5639281a57d6 <unknown>\n#14 0x563928171dbf <unknown>\n#15 0x5639281c8748 <unknown>\n#16 0x5639281c8917 <unknown>\n#17 0x5639281d9773 <unknown>\n#18 0x7f50ff694ac3 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fe8cab14b50>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nsecret_data = {'email': '', 'password': ''}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, secret_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/test_login.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"633c3ed2e1916c924477dd8545352605\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fe8caace340>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5639281da5e3 <unknown>\nE       #1 0x563927e9d0b7 <unknown>\nE       #2 0x563927eeaf53 <unknown>\nE       #3 0x563927eeb051 <unknown>\nE       #4 0x563927f309c4 <unknown>\nE       #5 0x563927f11f1d <unknown>\nE       #6 0x563927f2db3d <unknown>\nE       #7 0x563927f11cc3 <unknown>\nE       #8 0x563927edd0e4 <unknown>\nE       #9 0x563927ede0ae <unknown>\nE       #10 0x5639281a0ce1 <unknown>\nE       #11 0x5639281a4b7e <unknown>\nE       #12 0x56392818e4b5 <unknown>\nE       #13 0x5639281a57d6 <unknown>\nE       #14 0x563928171dbf <unknown>\nE       #15 0x5639281c8748 <unknown>\nE       #16 0x5639281c8917 <unknown>\nE       #17 0x5639281d9773 <unknown>\nE       #18 0x7f50ff694ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"secret_data","time":{"start":1701047065996,"stop":1701047065997,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"base_url","time":{"start":1701047065996,"stop":1701047065996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1701047065996,"stop":1701047065996,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"json_data","time":{"start":1701047065997,"stop":1701047065997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5639281da5e3 <unknown>\n#1 0x563927e9d0b7 <unknown>\n#2 0x563927eeaf53 <unknown>\n#3 0x563927eeb051 <unknown>\n#4 0x563927f309c4 <unknown>\n#5 0x563927f11f1d <unknown>\n#6 0x563927f2db3d <unknown>\n#7 0x563927f11cc3 <unknown>\n#8 0x563927edd0e4 <unknown>\n#9 0x563927ede0ae <unknown>\n#10 0x5639281a0ce1 <unknown>\n#11 0x5639281a4b7e <unknown>\n#12 0x56392818e4b5 <unknown>\n#13 0x5639281a57d6 <unknown>\n#14 0x563928171dbf <unknown>\n#15 0x5639281c8748 <unknown>\n#16 0x5639281c8917 <unknown>\n#17 0x5639281d9773 <unknown>\n#18 0x7f50ff694ac3 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fe8cab14b50>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nsecret_data = {'email': '', 'password': ''}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, secret_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/test_login.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"633c3ed2e1916c924477dd8545352605\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7fe8caace340>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5639281da5e3 <unknown>\nE       #1 0x563927e9d0b7 <unknown>\nE       #2 0x563927eeaf53 <unknown>\nE       #3 0x563927eeb051 <unknown>\nE       #4 0x563927f309c4 <unknown>\nE       #5 0x563927f11f1d <unknown>\nE       #6 0x563927f2db3d <unknown>\nE       #7 0x563927f11cc3 <unknown>\nE       #8 0x563927edd0e4 <unknown>\nE       #9 0x563927ede0ae <unknown>\nE       #10 0x5639281a0ce1 <unknown>\nE       #11 0x5639281a4b7e <unknown>\nE       #12 0x56392818e4b5 <unknown>\nE       #13 0x5639281a57d6 <unknown>\nE       #14 0x563928171dbf <unknown>\nE       #15 0x5639281c8748 <unknown>\nE       #16 0x5639281c8917 <unknown>\nE       #17 0x5639281d9773 <unknown>\nE       #18 0x7f50ff694ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1701047091028,"stop":1701047101306,"duration":10278},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5639281da5e3 <unknown>\n#1 0x563927e9d0b7 <unknown>\n#2 0x563927eeaf53 <unknown>\n#3 0x563927eeb051 <unknown>\n#4 0x563927f309c4 <unknown>\n#5 0x563927f11f1d <unknown>\n#6 0x563927f2db3d <unknown>\n#7 0x563927f11cc3 <unknown>\n#8 0x563927edd0e4 <unknown>\n#9 0x563927ede0ae <unknown>\n#10 0x5639281a0ce1 <unknown>\n#11 0x5639281a4b7e <unknown>\n#12 0x56392818e4b5 <unknown>\n#13 0x5639281a57d6 <unknown>\n#14 0x563928171dbf <unknown>\n#15 0x5639281c8748 <unknown>\n#16 0x5639281c8917 <unknown>\n#17 0x5639281d9773 <unknown>\n#18 0x7f50ff694ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/kisangateway-test/kisangateway-test/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/kisangateway-test/kisangateway-test/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/kisangateway-test/kisangateway-test/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/kisangateway-test/kisangateway-test/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"e4288b1b8756088a","name":"HTML example","source":"e4288b1b8756088a.html","type":"text/html","size":32},{"uid":"343928451e7588ae","name":"TXT example","source":"343928451e7588ae.txt","type":"text/plain","size":17},{"uid":"835c39b0a7c45048","name":"CSV example","source":"835c39b0a7c45048.csv","type":"text/csv","size":32},{"uid":"bca5d1dc657f9760","name":"JSON example","source":"bca5d1dc657f9760.json","type":"application/json","size":31},{"uid":"3b3d56a5a28ac656","name":"some attachment name","source":"3b3d56a5a28ac656.xml","type":"application/xml","size":124},{"uid":"50995b519f3a77f","name":"URI List example","source":"50995b519f3a77f.uri","type":"text/uri-list","size":70},{"uid":"81d9c44a4771d01e","name":"public ip address","source":"81d9c44a4771d01e.txt","type":"text/plain","size":12},{"uid":"222ca25f1fc6effb","name":"Cookies","source":"222ca25f1fc6effb.json","type":"application/json","size":2},{"uid":"835fa3f60dfdbe78","name":"Session Storage","source":"835fa3f60dfdbe78.json","type":"application/json","size":2},{"uid":"e3ebe930b4b46ecd","name":"Local Storage","source":"e3ebe930b4b46ecd.json","type":"application/json","size":2},{"uid":"c85388e520b72f2e","name":"Console Logs","source":"c85388e520b72f2e.json","type":"application/json","size":2},{"uid":"4a57ac938d1d4c23","name":"Full Page Screenshot","source":"4a57ac938d1d4c23.png","type":"image/png","size":2669391},{"uid":"14a7e26bcad1e721","name":"URL","source":"14a7e26bcad1e721.uri","type":"text/uri-list","size":25},{"uid":"2c9ee850f3e83223","name":"Network Logs","source":"2c9ee850f3e83223.json","type":"application/json","size":13977}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":14,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Login"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"epic","value":"Security"},{"name":"severity","value":"blocker"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az570-975"},{"name":"thread","value":"2305-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"90a2f52ef45f4262.json","parameterValues":[]}