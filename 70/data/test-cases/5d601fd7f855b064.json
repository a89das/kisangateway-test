{"uid":"5d601fd7f855b064","name":"Logout of system test","fullName":"tests.test_login.TestLogin#test_logout","historyId":"b90200cedc51a1ecbba9a19fbdbf8893","time":{"start":1700787776273,"stop":1700787786564,"duration":10291},"description":"Log out from app","descriptionHtml":"<p>Log out from app</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556b834015e3 <unknown>\n#1 0x556b830c40b7 <unknown>\n#2 0x556b83111f53 <unknown>\n#3 0x556b83112051 <unknown>\n#4 0x556b831579c4 <unknown>\n#5 0x556b83138f1d <unknown>\n#6 0x556b83154b3d <unknown>\n#7 0x556b83138cc3 <unknown>\n#8 0x556b831040e4 <unknown>\n#9 0x556b831050ae <unknown>\n#10 0x556b833c7ce1 <unknown>\n#11 0x556b833cbb7e <unknown>\n#12 0x556b833b54b5 <unknown>\n#13 0x556b833cc7d6 <unknown>\n#14 0x556b83398dbf <unknown>\n#15 0x556b833ef748 <unknown>\n#16 0x556b833ef917 <unknown>\n#17 0x556b83400773 <unknown>\n#18 0x7f78b2494ac3 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f151c911390>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nsecret_data = {'email': '', 'password': ''}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, secret_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/test_login.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"50460f0dd6cf3219545d7a40088c9c1f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f151c86e2a0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556b834015e3 <unknown>\nE       #1 0x556b830c40b7 <unknown>\nE       #2 0x556b83111f53 <unknown>\nE       #3 0x556b83112051 <unknown>\nE       #4 0x556b831579c4 <unknown>\nE       #5 0x556b83138f1d <unknown>\nE       #6 0x556b83154b3d <unknown>\nE       #7 0x556b83138cc3 <unknown>\nE       #8 0x556b831040e4 <unknown>\nE       #9 0x556b831050ae <unknown>\nE       #10 0x556b833c7ce1 <unknown>\nE       #11 0x556b833cbb7e <unknown>\nE       #12 0x556b833b54b5 <unknown>\nE       #13 0x556b833cc7d6 <unknown>\nE       #14 0x556b83398dbf <unknown>\nE       #15 0x556b833ef748 <unknown>\nE       #16 0x556b833ef917 <unknown>\nE       #17 0x556b83400773 <unknown>\nE       #18 0x7f78b2494ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1700787750808,"stop":1700787750808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"secret_data","time":{"start":1700787750808,"stop":1700787750808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1700787750808,"stop":1700787750808,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"json_data","time":{"start":1700787750809,"stop":1700787750809,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"description":"Log out from app","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556b834015e3 <unknown>\n#1 0x556b830c40b7 <unknown>\n#2 0x556b83111f53 <unknown>\n#3 0x556b83112051 <unknown>\n#4 0x556b831579c4 <unknown>\n#5 0x556b83138f1d <unknown>\n#6 0x556b83154b3d <unknown>\n#7 0x556b83138cc3 <unknown>\n#8 0x556b831040e4 <unknown>\n#9 0x556b831050ae <unknown>\n#10 0x556b833c7ce1 <unknown>\n#11 0x556b833cbb7e <unknown>\n#12 0x556b833b54b5 <unknown>\n#13 0x556b833cc7d6 <unknown>\n#14 0x556b83398dbf <unknown>\n#15 0x556b833ef748 <unknown>\n#16 0x556b833ef917 <unknown>\n#17 0x556b83400773 <unknown>\n#18 0x7f78b2494ac3 <unknown>","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f151c911390>\njson_data = {'forgot_password': {'error_message': \"We can't find a user with that e-mail address.\", 'success_message': 'A reset li...you page', 'name': 'test', 'new_name': 'another test', 'no_project_found_msg': 'No project matches the criteria', ...}}\nsecret_data = {'email': '', 'password': ''}\n\n    @allure.description(\"Log out from app\")\n    @allure.title(\"Logout of system test\")\n    @allure.story(\"As a user i want to be able to logout after a successful login.\")\n    @pytest.mark.run(order=2)\n    def test_logout(self, json_data: dict, secret_data: dict):\n        # example of a simple text attachment\n        allure.attach(\n            \"<h1>Example html attachment</h1>\",\n            name=\"HTML example\",\n            attachment_type=allure.attachment_type.HTML,\n        )\n        allure.attach(\n            \"Some text content\",\n            name=\"TXT example\",\n            attachment_type=allure.attachment_type.TEXT,\n        )\n        allure.attach(\n            \"first,second,third\\none,two,three\",\n            name=\"CSV example\",\n            attachment_type=allure.attachment_type.CSV,\n        )\n        allure.attach(\n            json.dumps({\"first\": 1, \"second\": 2}, indent=2),\n            name=\"JSON example\",\n            attachment_type=allure.attachment_type.JSON,\n        )\n        xml_content = \"\"\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n            <tag>\n                 <inside>...</inside>\n             </tag>\n         \"\"\"\n        allure.attach(\n            xml_content,\n            name=\"some attachment name\",\n            attachment_type=allure.attachment_type.XML,\n        )\n        allure.attach(\n            \"\\n\".join(\n                [\n                    \"https://github.com/allure-framework\",\n                    \"https://github.com/allure-examples\",\n                ]\n            ),\n            name=\"URI List example\",\n            attachment_type=allure.attachment_type.URI_LIST,\n        )\n>       self.about_page.click_login_link()\n\ntests/test_login.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/about_page.py:20: in click_login_link\n    self.click(self.LOGIN_LINK)\npages/base_page.py:38: in click\n    el: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"50460f0dd6cf3219545d7a40088c9c1f\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x7f151c86e2a0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x556b834015e3 <unknown>\nE       #1 0x556b830c40b7 <unknown>\nE       #2 0x556b83111f53 <unknown>\nE       #3 0x556b83112051 <unknown>\nE       #4 0x556b831579c4 <unknown>\nE       #5 0x556b83138f1d <unknown>\nE       #6 0x556b83154b3d <unknown>\nE       #7 0x556b83138cc3 <unknown>\nE       #8 0x556b831040e4 <unknown>\nE       #9 0x556b831050ae <unknown>\nE       #10 0x556b833c7ce1 <unknown>\nE       #11 0x556b833cbb7e <unknown>\nE       #12 0x556b833b54b5 <unknown>\nE       #13 0x556b833cc7d6 <unknown>\nE       #14 0x556b83398dbf <unknown>\nE       #15 0x556b833ef748 <unknown>\nE       #16 0x556b833ef917 <unknown>\nE       #17 0x556b83400773 <unknown>\nE       #18 0x7f78b2494ac3 <unknown>\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Click Login link","time":{"start":1700787776274,"stop":1700787786564,"duration":10290},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x556b834015e3 <unknown>\n#1 0x556b830c40b7 <unknown>\n#2 0x556b83111f53 <unknown>\n#3 0x556b83112051 <unknown>\n#4 0x556b831579c4 <unknown>\n#5 0x556b83138f1d <unknown>\n#6 0x556b83154b3d <unknown>\n#7 0x556b83138cc3 <unknown>\n#8 0x556b831040e4 <unknown>\n#9 0x556b831050ae <unknown>\n#10 0x556b833c7ce1 <unknown>\n#11 0x556b833cbb7e <unknown>\n#12 0x556b833b54b5 <unknown>\n#13 0x556b833cc7d6 <unknown>\n#14 0x556b83398dbf <unknown>\n#15 0x556b833ef748 <unknown>\n#16 0x556b833ef917 <unknown>\n#17 0x556b83400773 <unknown>\n#18 0x7f78b2494ac3 <unknown>\n\n","statusTrace":"  File \"/home/runner/work/kisangateway-test/kisangateway-test/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/kisangateway-test/kisangateway-test/pages/about_page.py\", line 20, in click_login_link\n    self.click(self.LOGIN_LINK)\n  File \"/home/runner/work/kisangateway-test/kisangateway-test/pages/base_page.py\", line 38, in click\n    el: WebElement = self.wait.until(\n                     ^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/kisangateway-test/kisangateway-test/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"61f17e304a42ddd1","name":"HTML example","source":"61f17e304a42ddd1.html","type":"text/html","size":32},{"uid":"3903a014a91a5460","name":"TXT example","source":"3903a014a91a5460.txt","type":"text/plain","size":17},{"uid":"3adffd6aaaf077a","name":"CSV example","source":"3adffd6aaaf077a.csv","type":"text/csv","size":32},{"uid":"50b628e068cc8d6e","name":"JSON example","source":"50b628e068cc8d6e.json","type":"application/json","size":31},{"uid":"51d731537a0df1cd","name":"some attachment name","source":"51d731537a0df1cd.xml","type":"application/xml","size":124},{"uid":"12baabb2ba92bb5c","name":"URI List example","source":"12baabb2ba92bb5c.uri","type":"text/uri-list","size":70},{"uid":"17052db900b60042","name":"public ip address","source":"17052db900b60042.txt","type":"text/plain","size":12},{"uid":"357b177c6ccab797","name":"Cookies","source":"357b177c6ccab797.json","type":"application/json","size":2},{"uid":"f5239d5e96cca55a","name":"Session Storage","source":"f5239d5e96cca55a.json","type":"application/json","size":2},{"uid":"6e5d22395ebe953b","name":"Local Storage","source":"6e5d22395ebe953b.json","type":"application/json","size":2},{"uid":"fd598f3335769e13","name":"Console Logs","source":"fd598f3335769e13.json","type":"application/json","size":2},{"uid":"ec9e96eb41acef06","name":"Full Page Screenshot","source":"ec9e96eb41acef06.png","type":"image/png","size":2669391},{"uid":"d15a563ddc4b9107","name":"URL","source":"d15a563ddc4b9107.uri","type":"text/uri-list","size":25},{"uid":"33f0f70b82f3dc89","name":"Network Logs","source":"33f0f70b82f3dc89.json","type":"application/json","size":13975}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":14,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"Security"},{"name":"story","value":"As a user i want to be able to logout after a successful login."},{"name":"severity","value":"blocker"},{"name":"feature","value":"Login"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az735-733"},{"name":"thread","value":"2274-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","security"]},"source":"5d601fd7f855b064.json","parameterValues":[]}